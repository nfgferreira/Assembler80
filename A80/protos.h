/* main.c */
void main (int argc, char *argv[]);
int stricmp(const char *s1, const char *s2);
void a80 (int argc, char *argv[]);
int monta_nome (char *s1, char *s2);
void explica (void);
int monta_destinos (char *nome);
char *combina (char *dest, char *org, char *ext);
char *tira_path (char *org);
char *nomeok (char *n, char *ext);
char *poe_ext (char *n, char *ext);

/* analex.c */
t_atomo analex (void);
void salva (t_atomo atomo);
t_atomo pega_atomo (void);
void desaloca (void);
t_atomo analex1 (void);
t_atomo nome (char c);
t_atomo numero (char c);
int conv_num (char *num, int comp, unsigned int *valor);
int num_bin (char *num, int comp, unsigned int *valor);
int num_oct (char *num, int comp, unsigned int *valor);
int num_dec (char *num, int comp, unsigned int *valor);
int num_hex (char *num, int comp, unsigned int *valor);
int reservada (char palavra [], t_atomo *tipo);
void limpa_ts (void);
void ver_nome (char *s, int comp);
simb *get_simb (void);
/* 1.30 char le_car (void);*/
void expande_linha (void);
char *m_parametro (char *n);
void hexa (char *s, int n);
/* 1.30 char get_car (void);*/
void devolve (void);
void volta_atomo (t_atomo atomo);
char *strupr(char *str);
void inic_lex (char *nome);
void salva_lex (void);
void rec_lex (void);
char *ultoa(unsigned long value, char *buffer, int radix);
void mprintf (char *s, ...);
char le_car (void);					/* 1.30 */
void final_de_linha (void);		/* 1.30 */

/* anass.c */
int compila (char *nome);
void passo1 (void);
void define_simbolo (simb *s, int valor, char aloc);
void trata_inst (t_atomo atomo);
int monta1 (int oc);
void monta2 (int oc);
int monta3 (int oc);
void monta4 (int oc);
int monta5 (int oc);
int monta6 (int oc);
void monta7 (int oc);
void monta8 (int oc, t_atomo at);
int monta9 (int oc);
int monta10 (int oc);
void monta11 (int oc);
int monta12 (void);
void inicializa1 (char *nome);
void inicializa2 (char *nome);
void erro (int erronum);
void erro_linha (int erronum);
void erro_fatal (int erronum);
void grave (void);
void termina_linha (void);
int espera_virgula (void);
void fim_da_linha (void);
void acerta_pont_old (void);
void acerta_pc (void);
void incrementa_passo (int comp);
void termina (void);
void define_irp (void);
void define_rept (void);
void define_macro (simb *memsimb);
void coloca_macro (simb *s, macro_desc **m);
macro_desc *busca_macro (char n[]);
void guarda_car (char c);
void coloca_simbolos (int *n, int *p);
void coloca_locais (void);
void poe_local (char *n);
void poe_nome (char *n);
void salva_estado (void);
void recupera_estado (void);
void pega_parametros (char *p, int *np);
void get_par (char *p, int *np);
void coloca_car (char *p, char c, int *i, int *np);
int parse_byte (void);
int parse_s_byte (void);
void parse_1_byte (void);
void parse_2_bytes (void);
void bytz80 (unsigned char byte1, unsigned char byte2);
void coloca_byte (unsigned char byte, unsigned int posicao);
void trata_include (char *inc_file);
int trata_pch (char *pch);
int inicia_pch (char *nome);
unsigned char le_byte_pch (void);
unsigned int le_word_pch (void);
char *arq_include (char *path_list, char *arq);
int exist (char *arq);
void constroi_pch (void);
void simbolo_pch (simb *s);
void macro_pch (macro_desc *m);
void w_byte (unsigned char byte);
void w_word (unsigned int word);

/* expr.c */
int expressao (void);
int parse_expr (void);
int expr (void);
void hl_exp (void);
void and_exp (void);
void rel_exp (void);
void soma_exp (void);
void termo_exp (void);
#ifndef bottom_up
void complementa (void);
void troca_sinal (void);
void high (void);
void low (void);
void and (void);
void or_xor (int op);
void soma (void);
void subtrai (void);
void relacao (int r);
void coloca_numero (int n);
void multiplica (int m);
#else
int estado0 (void);
int estado1 (void);
int estado2 (void);
int estado3 (void);
int estado4 (void);
int estado5 (void);
int estado6 (void);
int empilha_operador (t_atomo op);
int coloca_numero (t_atomo n);
int reduz_expressao (t_atomo op);
int prioridade (t_atomo op);
int termina_expressao (void);
int faz_op_pendente (void);
int troca_sinal (void);
int multiplica (int m);
int soma (void);
int subtrai (void);
int relacao (int r);
int complementa (void);
int and (void);
int or_xor (int op);
int high (void);
int low (void);
#endif

/* passo2.c */
void passo2 (void);
void pgm_passo2 (void);
void trata_ins2 (t_atomo atomo);
void manda_byte (int byte);
int manda_endereco (int offset);
void define_nome (void);
void inicia_saida (void);
void manda (int num, int n);
void manda_bit (int bit);
void fecha_arqs (void);
void manda_nome (void);
void manda_comprimentos (void);
void manda_end (void);
void manda_externos (void);
void manda_entry_symbols (void);
void manda_publics (void);
void cria_sym (void);
void ordena_tab_sym (void);
void sort (long int n);
void imprime_simbolo (simb *s);
void manda_car_sym (char c);
void escreve (int handle, char *buffer, unsigned int count);
int inst_z80 (void);
void exp_s_byte (void);
void exp_1_byte (void);
int expande_rot (int oc);
int expande_shift (t_atomo atomo, int oc);
